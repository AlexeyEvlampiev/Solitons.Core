// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Solitons.Samples.Database.Scripts.PostDeployment
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class RegisterDataContractsSqlRtt : Solitons.Text.Sql.PgRuntimeTextTemplate
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\nCREATE TEMPORARY TABLE tmp_data_contracts(\r\n   object_id uuid NOT NULL,\r\n   dot" +
                    "net_type varchar(150) NOT NULL );\r\n\r\nINSERT INTO tmp_data_contracts(object_id, d" +
                    "otnet_type) VALUES ");
 foreach(var type in DataContractTypes){ 
            this.Write(" \r\n(\'");
            this.Write(this.ToStringHelper.ToStringWithCulture(type.GUID));
            this.Write("\'::uuid, \'");
            this.Write(this.ToStringHelper.ToStringWithCulture(type.FullName));
            this.Write("\')");
 if(type != DataContractTypes.Last())Write(","); } 
            this.Write(" ;\r\n\r\nCREATE TEMPORARY TABLE tmp_content_type(\r\n   object_id uuid NOT NULL,\r\n   c" +
                    "ontent_type varchar(150),\r\n   \"schema\" text);\r\n\r\nINSERT INTO tmp_content_type(ob" +
                    "ject_id, content_type, \"schema\") VALUES ");
 foreach(var entry in DataContractEntries){ 
            this.Write(" \r\n(\'");
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.TypeId));
            this.Write("\'::uuid, \'");
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.ContentType));
            this.Write("\', NULL)");
 if(entry != DataContractEntries.Last())Write(","); } 
            this.Write(@" ;

INSERT INTO api.data_contract(object_id, dotnet_type)
SELECT object_id, dotnet_type
FROM tmp_data_contracts
ON CONFLICT(object_id) DO UPDATE SET dotnet_type = EXCLUDED.dotnet_type;


INSERT INTO api.data_contract_content_type(data_contract_object_id, content_type)
SELECT object_id, content_type
FROM tmp_content_type
ON CONFLICT(data_contract_object_id, content_type) DO NOTHING;
");
            return this.GenerationEnvironment.ToString();
        }
    }
}
