// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Solitons
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class TestDomainContextRtt : Solitons.Text.RuntimeTextTemplate
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("namespace TestCase\r\n{\r\n\tusing System;\r\n\tusing System.Runtime.InteropServices;\r\n\tu" +
                    "sing System.Text.Json.Serialization;\r\n\tusing System.Xml.Serialization;\r\n\tusing S" +
                    "olitons;\r\n\r\n\t");
 if(Xml){ 
            this.Write(" \r\n\t[DataTransferObject(typeof(");
            this.Write(this.ToStringHelper.ToStringWithCulture(BasicXmlSerializer));
            this.Write("), IsDefault = true)]");
 } 
            this.Write(" ");
 if(Json){ 
            this.Write(" \r\n\t[DataTransferObject(typeof(");
            this.Write(this.ToStringHelper.ToStringWithCulture(BasicJsonSerializer));
            this.Write("))]");
 } 
            this.Write(" ");
 if(GuidAttribute){ 
            this.Write(" \r\n\t[Guid(\"");
            this.Write(this.ToStringHelper.ToStringWithCulture(Guid.NewGuid()));
            this.Write("\")]");
 } 
            this.Write(@" 
	[XmlRoot(""Dto"")]
	public sealed class TestDto
	{
		[XmlAttribute(""Test"")]
		[JsonPropertyName(""text"")]
		public string Text { get; set; }
	}

	public sealed class TestDomainContext : DomainContext
	{
		public TestDomainContext() : base(typeof(TestDomainContext).Assembly.ToEnumerable()){}
	}
}
");
            return this.GenerationEnvironment.ToString();
        }
    }
}
