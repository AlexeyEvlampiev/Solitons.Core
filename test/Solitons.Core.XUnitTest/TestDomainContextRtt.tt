<#@ template language="C#" inherits="Solitons.Text.RuntimeTextTemplate" linePragmas="false" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
namespace TestCase
{
	using System;
	using System.Runtime.InteropServices;
	using System.Text.Json.Serialization;
	using System.Xml.Serialization;
	using Solitons;

	<# if(Xml){ #> 
	[DataTransferObject(typeof(<#= BasicXmlSerializer #>), IsDefault = true)]<# } #> <# if(Json){ #> 
	[DataTransferObject(typeof(<#= BasicJsonSerializer #>))]<# } #> <# if(GuidAttribute){ #> 
	[Guid("<#= Guid.NewGuid() #>")]<# } #> 
	[XmlRoot("Dto")]
	public sealed class TestDto
	{
		[XmlAttribute("Test")]
		[JsonPropertyName("text")]
		public string Text { get; set; }
	}

	public sealed class TestDomainContext : DomainContext
	{
		public TestDomainContext() : base(typeof(TestDomainContext).Assembly.ToEnumerable()){}
	}
}
