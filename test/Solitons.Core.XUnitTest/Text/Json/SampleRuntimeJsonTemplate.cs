// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Solitons.Text.Json
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class SampleRuntimeJsonTemplate : JsonRuntimeTextTemplate
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("{\r\n\t");
            this.Write(this.ToStringHelper.ToStringWithCulture("boolean"));
            this.Write(": ");
            this.Write(this.ToStringHelper.ToStringWithCulture(1==1));
            this.Write(",\r\n\t");
            this.Write(this.ToStringHelper.ToStringWithCulture("double"));
            this.Write(": \"");
            this.Write(this.ToStringHelper.ToStringWithCulture(Math.PI));
            this.Write("\",\r\n\t");
            this.Write(this.ToStringHelper.ToStringWithCulture("timeSpan"));
            this.Write(": \"");
            this.Write(this.ToStringHelper.ToStringWithCulture(TimeSpan.FromSeconds(220)));
            this.Write("\",\r\n\t");
            this.Write(this.ToStringHelper.ToStringWithCulture("nullableTimeSpan"));
            this.Write(": \"");
            this.Write(this.ToStringHelper.ToStringWithCulture(new TimeSpan?(TimeSpan.FromSeconds(220))));
            this.Write("\",\r\n\t\"object\": ");
            this.Write(this.ToStringHelper.ToStringWithCulture(new { number = 123, text = "Hello"}));
            this.Write(",\r\n\t\"array\": ");
            this.Write(this.ToStringHelper.ToStringWithCulture(new object[]{123, "text", DateTime.Now}));
            this.Write(",\r\n\t\"map\": ");
            this.Write(this.ToStringHelper.ToStringWithCulture(new Dictionary<string,object>(){ ["number"]=123, ["text"]="Text", ["object"]=new { number = 123, text = "Hello"} }));
            this.Write(" ,\r\n\t\"multiLine\": ");
            this.Write(this.ToStringHelper.ToStringWithCulture(new StringBuilder("line 1").AppendLine().AppendLine("line 2")));
            this.Write("\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
}
