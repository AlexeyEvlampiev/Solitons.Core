// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Solitons.Data.Postgres
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class CreateRoleCommandRtt : Solitons.Text.Sql.PgRuntimeTextTemplate
    {
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("DO\r\n$$\r\nBEGIN\r\n\tIF EXISTS(SELECT * FROM pg_roles WHERE rolname = \'");
            this.Write(this.ToStringHelper.ToStringWithCulture(Role));
            this.Write("\') THEN\r\n\t\tEXECUTE \'\r\n\t\t\tALTER ROLE ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Role));
            this.Write(" WITH\r\n\t\t\t\t");
            this.Write(this.ToStringHelper.ToStringWithCulture(Login));
            this.Write("\r\n\t\t\t\t");
            this.Write(this.ToStringHelper.ToStringWithCulture(Superuser));
            this.Write("\r\n\t\t\t\t");
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateDb));
            this.Write("\r\n\t\t\t\t");
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateRole));
            this.Write("\r\n\t\t\t\t");
            this.Write(this.ToStringHelper.ToStringWithCulture(Inherit));
            this.Write(" ");
 if(WithLogin){ 
            this.Write(" \r\n\t\t\t\tCONNECTION LIMIT ");
            this.Write(this.ToStringHelper.ToStringWithCulture(ConnectionLimit));
            this.Write(" \r\n\t\t\t\tPASSWORD \'\'");
            this.Write(this.ToStringHelper.ToStringWithCulture(Pwd));
            this.Write("\'\'\'; ");
 } 
            this.Write(" \r\n\tELSE\r\n\t\tEXECUTE \'\r\n\t\t\tCREATE ROLE ");
            this.Write(this.ToStringHelper.ToStringWithCulture(Role));
            this.Write(" WITH\r\n\t\t\t\t");
            this.Write(this.ToStringHelper.ToStringWithCulture(Login));
            this.Write("\r\n\t\t\t\t");
            this.Write(this.ToStringHelper.ToStringWithCulture(Superuser));
            this.Write("\r\n\t\t\t\t");
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateDb));
            this.Write("\r\n\t\t\t\t");
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateRole));
            this.Write("\r\n\t\t\t\t");
            this.Write(this.ToStringHelper.ToStringWithCulture(Inherit));
 if(WithLogin){ 
            this.Write(" \r\n\t\t\t\tCONNECTION LIMIT ");
            this.Write(this.ToStringHelper.ToStringWithCulture(ConnectionLimit));
            this.Write(" \r\n\t\t\t\tPASSWORD \'\'");
            this.Write(this.ToStringHelper.ToStringWithCulture(Pwd));
            this.Write("\'\'\'; ");
 } 
            this.Write(" \r\n\tEND IF;\r\nEND;\r\n$$;\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
}
