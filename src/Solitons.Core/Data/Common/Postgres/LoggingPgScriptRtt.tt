<#@ template language="C#" linePragmas="false" inherits="Solitons.Text.Sql.PgRuntimeTextTemplate" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
CREATE TYPE   <#= SchemaName #>.log_level AS ENUM ('critical', 'error', 'warning', 'info', 'verbose'); 

CREATE TABLE IF NOT EXISTS system.log
(
	day_of_year int NOT NULL CHECK(day_of_year = EXTRACT(DOY FROM created_utc)) DEFAULT(EXTRACT(DOY FROM now())),
	day_of_month int NOT NULL CHECK(day_of_month = EXTRACT(DAY FROM created_utc)) DEFAULT(EXTRACT(DAY FROM now())),
	day_of_week int NOT NULL CHECK(day_of_week = EXTRACT(DOW FROM created_utc)) DEFAULT(EXTRACT(DOW FROM now())),
	quarter_of_year int NOT NULL CHECK(quarter_of_year = EXTRACT(QUARTER FROM created_utc)) DEFAULT(EXTRACT(QUARTER FROM now())),
	month_of_year int NOT NULL CHECK(month_of_year = EXTRACT(MONTH FROM created_utc)) DEFAULT(EXTRACT(MONTH FROM now())),
	week_of_year int NOT NULL CHECK(week_of_year = EXTRACT(WEEK FROM created_utc)) DEFAULT(EXTRACT(WEEK FROM now())),
	hour int NOT NULL CHECK(hour = EXTRACT(HOUR FROM created_utc)) DEFAULT(EXTRACT(HOUR FROM now())),
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	created_utc timestamp NOT NULL DEFAULT(now()),
    level system.log_level NOT NULL DEFAULT 'error'::system.log_level,
    tags text[],
    metadata json,
    message text NOT NULL,
	details text,
<# if(Options == LoggingPgScriptPartitioningOptions.ByYearDay){ #> 
	PRIMARY KEY(day_of_year, id)
) PARTITION BY HASH(day_of_year); <# for(int i = 1; i <= 365; ++i ){ var part = (i % 365).ToString("000"); #> 
CREATE TABLE system.log_day<#= part #> PARTITION OF system.log FOR VALUES WITH (MODULUS 365, REMAINDER <#= part #>); <# } } #> 

<# if(Options == LoggingPgScriptPartitioningOptions.ByYearQuarter){ #> 
	PRIMARY KEY(quarter_of_year, id)
) PARTITION BY HASH(quarter_of_year); <# for(int i = 1; i <= 4; ++i ){ var part = (i % 4 ).ToString("0"); #> 
CREATE TABLE system.log_quarter<#= part #> PARTITION OF system.log FOR VALUES WITH (MODULUS 4, REMAINDER <#= part #>); <# } } #>

CREATE OR REPLACE FUNCTION system.log_insert(
	_level system.log_level, 
	_tags text[], 
	_metadata json, 
	_message text, 
	_details text DEFAULT(NULL),
	_created_utc timestamp DEFAULT(now())) RETURNS SETOF system.log 
AS 
$$
	INSERT INTO system.log(
		day_of_year,
		day_of_month,
		day_of_week,
		quarter_of_year,
		month_of_year,
		week_of_year,
		hour,
		created_utc,
		level,
		tags,
		metadata,
		"message",
		details)
	VALUES(
		EXTRACT(DOY FROM _created_utc),
		EXTRACT(DAY FROM _created_utc),
		EXTRACT(DOW FROM _created_utc),
		EXTRACT(QUARTER FROM _created_utc),
		EXTRACT(MONTH FROM _created_utc),
		EXTRACT(WEEK FROM _created_utc),
		EXTRACT(HOUR FROM _created_utc),
		_created_utc,
		COALESCE(_level, 'error'::system.log_level),
		_tags,
		_metadata,
		_message,
		_details		
	)
	RETURNING *;
$$ LANGUAGE 'sql' VOLATILE;


CREATE VIEW system.vw_log AS 
SELECT 	
	id,		
	level,
	tags,
	metadata,
	message,	
	details,
	created_utc,
	day_of_year,
	day_of_month,
	day_of_week,
	quarter_of_year,
	month_of_year,
	week_of_year,
	hour,
	to_tsvector(jsonb_build_object(
		'id', id
		,'createdUtc', created_utc
		,'level', level
		,'tags', tags
		,'metadata', metadata
		,'message', message
		,'details', details
	)) AS tsvector
FROM system.log;



CREATE MATERIALIZED VIEW system.mvw_log AS 
SELECT 
	id,		
	level,
	tags,
	metadata,
	message,	
	details,
	created_utc,
	day_of_year,
	day_of_month,
	day_of_week,
	quarter_of_year,
	month_of_year,
	week_of_year,
	hour,
	tsvector
FROM system.vw_log
ORDER BY created_utc DESC;

CREATE INDEX IF NOT EXISTS ix_mvw_log_id ON system.mvw_log(id);
CREATE INDEX IF NOT EXISTS ix_mvw_log_level ON system.mvw_log(level);
CREATE INDEX IF NOT EXISTS ix_mvw_log_created_utc ON system.mvw_log(created_utc);
CREATE INDEX IF NOT EXISTS ix_mvw_log_message ON system.mvw_log USING gist (message gist_trgm_ops);
CREATE INDEX IF NOT EXISTS ix_mvw_log_details ON system.mvw_log USING gist (details gist_trgm_ops);

CREATE INDEX IF NOT EXISTS ix_mvw_log_day_of_year ON system.mvw_log(day_of_year);
CREATE INDEX IF NOT EXISTS ix_mvw_log_quarter_of_year ON system.mvw_log(quarter_of_year);
CREATE INDEX IF NOT EXISTS ix_mvw_log_month_of_year ON system.mvw_log(month_of_year);
CREATE INDEX IF NOT EXISTS ix_mvw_log_day_of_month ON system.mvw_log(day_of_month);
CREATE INDEX IF NOT EXISTS ix_mvw_log_day_of_week ON system.mvw_log(day_of_week);
CREATE INDEX IF NOT EXISTS ix_mvw_log_hour ON system.mvw_log(hour);

CREATE INDEX ix_mvw_log_json ON system.mvw_log USING gist (tsvector);