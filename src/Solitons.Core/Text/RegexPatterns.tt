<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".generated.cs" #>
<# 
	var guidLooseWithoutBrakets = @"[0-9a-fA-F]{8}-?([0-9a-fA-F]{4}-?){3}[0-9a-fA-F]{12}";
    var guidLoose = "(?:@guid|[{]@guid[}])".Replace(@"@guid", guidLooseWithoutBrakets);
    var guidStrict = "^@guid$".Replace("@guid", guidLoose);
#>
namespace Solitons.Text
{
    public static partial class RegexPatterns
    {
        /// <summary>
        /// Contains regular expression patterns for matching UUIDs in various formats.
        /// </summary>
        public static class Uuid
        {
            /// <summary>
            /// Matches UUIDs in a loose format without braces, with each segment separated by a hyphen.
            /// </summary>
            public const string LooseFormatNoBraces = @"<#= guidLooseWithoutBrakets #>";

            /// <summary>
            /// Matches UUIDs in a loose format with optional braces, with each segment separated by a hyphen.
            /// </summary>
            public const string LooseFormatWithBraces = "<#= guidLoose #>";

            /// <summary>
            /// Matches UUIDs in a strict format, requiring either no braces or braces surrounding the entire UUID, with each segment separated by a hyphen.
            /// </summary>
            public const string StrictFormat = "<#= guidStrict #>";
        }
    }
}
